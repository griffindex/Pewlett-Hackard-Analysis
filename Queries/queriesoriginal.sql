-- Creating tables for PH-EmployeeDB

CREATE TABLE DEPARTMENTS (DEPT_NO VARCHAR(4) NOT NULL,
																											DEPT_NAME VARCHAR(40) NOT NULL,
																											PRIMARY KEY (DEPT_NO), UNIQUE (DEPT_NAME));

-- Creating Employees table

CREATE TABLE EMPLOYEES (EMP_NO INT NOT NULL,
																									BIRTH_DATE DATE NOT NULL,
																									FIRST_NAME VARCHAR NOT NULL,
																									LAST_NAME VARCHAR NOT NULL,
																									GENDER VARCHAR NOT NULL,
																									HIRE_DATE DATE NOT NULL,
																									PRIMARY KEY (EMP_NO));


CREATE TABLE DEPT_MANAGER (DEPT_NO VARCHAR(4) NOT NULL,
																												EMP_NO INT NOT NULL,
																												FROM_DATE DATE NOT NULL,
																												TO_DATE DATE NOT NULL,
																											FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEES (EMP_NO),
																											FOREIGN KEY (DEPT_NO) REFERENCES DEPARTMENTS (DEPT_NO),
																												PRIMARY KEY (EMP_NO,
																																										DEPT_NO));


CREATE TABLE SALARIES (EMP_NO INT NOT NULL,
																								SALARY INT NOT NULL,
																								FROM_DATE DATE NOT NULL,
																								TO_DATE DATE NOT NULL,
																							FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEES (EMP_NO),
																								PRIMARY KEY (EMP_NO));


CREATE TABLE DEPT_EMP (EMP_NO INT NOT NULL,
																								DEPT_NO VARCHAR(4) NOT NULL,
																								FROM_DATE DATE NOT NULL,
																								TO_DATE DATE NOT NULL,
																							FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEES (EMP_NO),
																							FOREIGN KEY (DEPT_NO) REFERENCES DEPARTMENTS (DEPT_NO),
																								PRIMARY KEY (EMP_NO,
																																						DEPT_NO));


CREATE TABLE TITLES (EMP_NO INT NOT NULL,
																						TITLE VARCHAR(40) NOT NULL,
																						FROM_DATE DATE NOT NULL,
																						TO_DATE DATE NOT NULL);


SELECT *
FROM DEPT_MANAGER;

--Search for all birthdays between 1952 and 1955

SELECT FIRST_NAME,
	LAST_NAME
FROM EMPLOYEES
WHERE BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31';

--Search for all birthdays in 1952

SELECT FIRST_NAME,
	LAST_NAME
FROM EMPLOYEES
WHERE BIRTH_DATE BETWEEN '1952-01-01' AND '1952-12-31';

-- Retirement eligibility

SELECT FIRST_NAME,
	LAST_NAME
FROM EMPLOYEES
WHERE (BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31')
	AND (HIRE_DATE BETWEEN '1985-01-01' AND '1988-12-31');

-- Number of employees retiring

SELECT COUNT(FIRST_NAME)
FROM EMPLOYEES
WHERE (BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31')
	AND (HIRE_DATE BETWEEN '1985-01-01' AND '1988-12-31');

-- Number of employees retiring INTO new table

SELECT FIRST_NAME,
	LAST_NAME INTO RETIREMENT_INFO
FROM EMPLOYEES
WHERE (BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31')
	AND (HIRE_DATE BETWEEN '1985-01-01' AND '1988-12-31');


SELECT *
FROM RETIREMENT_INFO;

-- Recreating retirement_info table

DROP TABLE RETIREMENT_INFO;

-- Create new table for retiring employees

SELECT EMP_NO,
	FIRST_NAME,
	LAST_NAME INTO RETIREMENT_INFO
FROM EMPLOYEES
WHERE (BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31')
	AND (HIRE_DATE BETWEEN '1985-01-01' AND '1988-12-31');

-- Check the table

SELECT *
FROM RETIREMENT_INFO;

-- Joining departments and dept_manager tables

SELECT DEPARTMENTS.DEPT_NAME,
	DEPT_MANAGER.EMP_NO,
	DEPT_MANAGER.FROM_DATE,
	DEPT_MANAGER.TO_DATE
FROM DEPARTMENTS
INNER JOIN DEPT_MANAGER ON DEPARTMENTS.DEPT_NO = DEPT_MANAGER.DEPT_NO;

-- Joining retirement_info and dept_emp tables

SELECT RETIREMENT_INFO.EMP_NO,
	RETIREMENT_INFO.FIRST_NAME,
	RETIREMENT_INFO.LAST_NAME,
	DEPT_EMP.TO_DATE
FROM RETIREMENT_INFO
LEFT JOIN DEPT_EMP ON RETIREMENT_INFO.EMP_NO = DEPT_EMP.EMP_NO;

-- Use Aliases for code readability

SELECT RI.EMP_NO,
	RI.FIRST_NAME,
	RI.LAST_NAME,
	DE.TO_DATE
FROM RETIREMENT_INFO AS RI
LEFT JOIN DEPT_EMP AS DE ON RI.EMP_NO = DE.EMP_NO;


SELECT D.DEPT_NAME,
	DM.EMP_NO,
	DM.FROM_DATE,
	DM.TO_DATE
FROM DEPARTMENTS AS D
INNER JOIN DEPT_MANAGER AS DM ON D.DEPT_NO = DM.DEPT_NO;

-- Use Left Join for retirement_info and dept_emp tables

SELECT RI.EMP_NO,
	RI.FIRST_NAME,
	RI.LAST_NAME,
	DE.TO_DATE INTO CURRENT_EMP
FROM RETIREMENT_INFO AS RI
LEFT JOIN DEPT_EMP AS DE ON RI.EMP_NO = DE.EMP_NO
WHERE DE.TO_DATE = ('9999-01-01');

-- Check the table

SELECT *
FROM CURRENT_EMP;

-- Employee count by department number

SELECT COUNT(CE.EMP_NO),
	DE.DEPT_NO INTO RETIRING_DEPT
FROM CURRENT_EMP AS CE
LEFT JOIN DEPT_EMP AS DE ON CE.EMP_NO = DE.EMP_NO
GROUP BY DE.DEPT_NO
ORDER BY DE.DEPT_NO;

-- List 1: Employee Information

SELECT *
FROM SALARIES
ORDER BY TO_DATE DESC;


SELECT E.EMP_NO,
	E.FIRST_NAME,
	E.LAST_NAME,
	E.GENDER,
	S.SALARY,
	DE.TO_DATE INTO EMP_INFO
FROM EMPLOYEES AS E
INNER JOIN SALARIES AS S ON (E.EMP_NO = S.EMP_NO)
INNER JOIN DEPT_EMP AS DE ON (E.EMP_NO = DE.EMP_NO)
WHERE (E.BIRTH_DATE BETWEEN '1952-01-01' AND '1955-12-31')
	AND (E.HIRE_DATE BETWEEN '1985-01-01' AND '1988-12-31')
	AND (DE.TO_DATE = '9999-01-01');

-- List 2: Management
-- List of managers per department

SELECT DM.DEPT_NO,
	D.DEPT_NAME,
	DM.EMP_NO,
	CE.LAST_NAME,
	CE.FIRST_NAME,
	DM.FROM_DATE,
	DM.TO_DATE INTO MANAGER_INFO
FROM DEPT_MANAGER AS DM
INNER JOIN DEPARTMENTS AS D ON (DM.DEPT_NO = D.DEPT_NO)
INNER JOIN CURRENT_EMP AS CE ON (DM.EMP_NO = CE.EMP_NO);

-- List 3: Department Retirees

SELECT CE.EMP_NO,
	CE.FIRST_NAME,
	CE.LAST_NAME,
	D.DEPT_NAME INTO DEPT_INFO
FROM CURRENT_EMP AS CE
INNER JOIN DEPT_EMP AS DE ON (CE.EMP_NO = DE.EMP_NO)
INNER JOIN DEPARTMENTS AS D ON (DE.DEPT_NO = D.DEPT_NO);

-- Create Tailored Lists
-- Create list for 'Sales' Department

SELECT CE.EMP_NO,
	CE.FIRST_NAME,
	CE.LAST_NAME,
	DE.DEPT_NO,
	DPT.DEPT_NAME INTO SALES_INFO
FROM CURRENT_EMP AS CE
INNER JOIN DEPT_EMP AS DE ON (CE.EMP_NO = DE.EMP_NO)
INNER JOIN DEPARTMENTS AS DPT ON (DE.DEPT_NO = DPT.DEPT_NO)
WHERE DEPT_NAME = 'Sales';

-- Create a list that returns combined departments

SELECT CE.EMP_NO,
	CE.FIRST_NAME,
	CE.LAST_NAME,
	DE.DEPT_NO,
	DPT.DEPT_NAME INTO SALES_DEV_COMBINED
FROM CURRENT_EMP AS CE
INNER JOIN DEPT_EMP AS DE ON (CE.EMP_NO = DE.EMP_NO)
INNER JOIN DEPARTMENTS AS DPT ON (DE.DEPT_NO = DPT.DEPT_NO)
WHERE DEPT_NAME IN ('Sales',
																					'Development');